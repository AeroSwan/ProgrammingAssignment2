## A pair of functions that cache the inverse of a matrix

## This function creates a special "matrix" object that can cache its inverse

makeCacheMatrix <- function(x = matrix()) {
	inv<-NULL
	set<-function(y){
	x<<-y
	inv<<-NULL
	}
	get<-function()x
	setInv<-function(inverse)inv<<-inverse
	getInv<-function()inv
	list(set=set,get=get,
		setInv=setInv,
		getInv=getInv)
}


## This function computes the inverse of the special "matrix"


cacheSolve <- function(x, ...) {
	## Return a matrix that is the inverse of 'x'
	inv<-x$getInv()
	if(!is.null(inv)){
	message('getting cached data')
	return(inv)
	}
	Inv<-x$get()
	inv<-solve(Inv,...)
	x$setInv(inv)
	inv
}
